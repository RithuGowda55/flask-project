openapi: 3.0.0
info:
  title: User API
  description: This is an API for managing users in the system.
  version: 1.0.0
servers:
  - url: http://localhost:5000
    description: Local development server
paths:
  /api/users:
    get:
      summary: Retrieve a list of users
      description: Retrieves a list of users with optional filters, pagination, and sorting.
      parameters:
        - name: page
          in: query
          description: Page number for pagination.
          required: false
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          description: Number of users per page.
          required: false
          schema:
            type: integer
            default: 5
        - name: search
          in: query
          description: Search users by first or last name.
          required: false
          schema:
            type: string
        - name: sort
          in: query
          description: Sort the results by a field. Prefix with "-" for descending order.
          required: false
          schema:
            type: string
        - name: city
          in: query
          description: Filter users by city.
          required: false
          schema:
            type: string
      responses:
        200:
          description: A list of users with optional filters applied.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    first_name:
                      type: string
                    last_name:
                      type: string
                    company_name:
                      type: string
                    email:
                      type: string
                    city:
                      type: string
                    state:
                      type: string
                    zip:
                      type: string
                    web:
                      type: string
                    age:
                      type: integer
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    post:
      summary: Create a new user
      description: Adds a new user to the database.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - first_name
                - last_name
                - email
              properties:
                first_name:
                  type: string
                last_name:
                  type: string
                company_name:
                  type: string
                email:
                  type: string
                city:
                  type: string
                state:
                  type: string
                zip:
                  type: string
                web:
                  type: string
                age:
                  type: integer
      responses:
        201:
          description: User successfully created
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        400:
          description: Missing required fields (first name, last name, email).
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /api/users/{id}:
    get:
      summary: Retrieve a single user by ID
      description: Retrieves user details by the given ID.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: The user with the specified ID.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  first_name:
                    type: string
                  last_name:
                    type: string
                  company_name:
                    type: string
                  email:
                    type: string
                  city:
                    type: string
                  state:
                    type: string
                  zip:
                    type: string
                  web:
                    type: string
                  age:
                    type: integer
        404:
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    put:
      summary: Update user by ID
      description: Updates the user details for the specified ID.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                last_name:
                  type: string
                company_name:
                  type: string
                email:
                  type: string
                city:
                  type: string
                state:
                  type: string
                zip:
                  type: string
                web:
                  type: string
                age:
                  type: integer
      responses:
        200:
          description: User successfully updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    delete:
      summary: Delete a user by ID
      description: Deletes a user from the database by ID.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: User successfully deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        404:
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    patch:
      summary: Get city-wise summary of users
      description: Retrieves a summary of users grouped by city, including count and average age.
      responses:
        200:
          description: City-wise summary of users.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    city:
                      type: string
                    count:
                      type: integer
                    avg_age:
                      type: number
                      format: float
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /api/users/count:
    get:
      summary: Get the total number of users
      description: Retrieves the total count of users in the system.
      responses:
        200:
          description: Total number of users.
          content:
            application/json:
              schema:
                type: object
                properties:
                  total_users:
                    type: integer
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
components:
  schemas:
    User:
      type: object
      required:
        - first_name
        - last_name
        - email
      properties:
        first_name:
          type: string
        last_name:
          type: string
        company_name:
          type: string
        email:
          type: string
        city:
          type: string
        state:
          type: string
        zip:
          type: string
        web:
          type: string
        age:
          type: integer
